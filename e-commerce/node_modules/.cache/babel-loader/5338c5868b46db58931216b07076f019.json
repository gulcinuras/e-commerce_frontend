{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Program Files\\\\Git\\\\ecommerce\\\\e-commerce-frontend\\\\src\\\\sm_invoice_details.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Table from 'react-bootstrap/Table';\nimport tracker from '../src/api/tracker';\nimport { Row } from 'reactstrap';\nimport Select from 'react-select';\nconst options = [{\n  label: \"on the way\",\n  value: \"on the way\"\n}, {\n  label: \"ordered\",\n  value: \"ordered\"\n}, {\n  label: \"shipped\",\n  value: \"shipped\"\n}];\n\nclass sm_invoice_details extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = async id => {\n      const oldstatus = this.state.oldstatus;\n      const newstatus = this.state.newstatus;\n      console.log(\"newstatus: \", newstatus);\n      console.log(\"oldstatus: \", oldstatus);\n\n      if (oldstatus !== newstatus) {\n        if (newstatus === \"Cancelled\") {\n          const response = await tracker.delete(\"order/\" + id);\n          console.log(\"delete response:\", response);\n        } else {\n          const response = await tracker.put(\"order/\" + id, {\n            status: newstatus\n          });\n          console.log(\"status update response:\", response);\n        }\n      } else {}\n    };\n\n    this.componentDidMount = async e => {\n      var id = this.props.match.params.id;\n      this.setState({\n        id: id\n      });\n      const response = await tracker.get('/order/' + id);\n      console.log(\"responsee\", response);\n      const email = response.data.email;\n      const status = response.data.status;\n      await this.setState({\n        oldstatus: status,\n        newstatus: status\n      });\n      const userid = response.data.user;\n      const address = response.data.address;\n      const date = response.data.createdAt;\n      this.setState({\n        selectedOption: {\n          label: status,\n          value: status\n        }\n      });\n      var arr = [];\n      const {\n        selectedoption\n      } = this.state;\n\n      if (response) {\n        console.log(\"responsee\", response);\n        console.log(response.data);\n        console.log(response.data.basket);\n        const res = await tracker.get('/basket/' + response.data.basket);\n        console.log(res);\n        const totalprice = res.data.productList.totalprice;\n        var parray = [];\n\n        for (var j = 0; j < res.data.productList.productArray.length; j++) {\n          const name = res.data.productList.productArray[j].name;\n          const price = res.data.productList.productArray[j].price;\n          const size = res.data.productList.productArray[j].size;\n          const q = res.data.productList.productArray[j].quantity;\n          const prod = [name, price, size, q];\n          console.log(\"q\", q);\n          parray.push(prod);\n          console.log(\"prod\", prod);\n        }\n\n        ;\n\n        var item = /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              striped: true,\n              responsive: true,\n              bordered: true,\n              hover: true,\n              variant: \"dark\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Invoice ID #\", this.state.id]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"User: \", userid]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Date: \", date, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Total Price: $\", totalprice, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Email: \", email, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Address: \", address, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"Selectopt\",\n                    children: /*#__PURE__*/_jsxDEV(Select, {\n                      defaultInputValue: this.state.newstatus,\n                      value: selectedoption,\n                      onChange: this.newstatus,\n                      options: options\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"size\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"quantity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: parray.map((numList, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: numList.map((num, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: num\n                  }, j, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 53\n                  }, this))\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              width: \"auto\"\n            },\n            className: \"b-login\",\n            onClick: () => {\n              this.handleChange(id);\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this);\n\n        arr.push(item);\n        await this.setState({\n          arr: arr\n        });\n        await this.setState({\n          details: true\n        });\n      } else {}\n    };\n\n    this.state = {\n      id: \"\",\n      arr: [],\n      oldstatus: \"\",\n      details: false,\n      newstatus: \"\",\n      selectedoption: \"\"\n    };\n    this.newstatus = this.newstatus.bind(this);\n  }\n\n  newstatus(e) {\n    this.setState({\n      selectedoption\n    }, () => console.log(`Option selected:`, this.state.selectedoption));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.state.details ? this.state.arr : null\n    }, void 0, false);\n  }\n\n}\n\nexport default sm_invoice_details;","map":{"version":3,"sources":["C:/Program Files/Git/ecommerce/e-commerce-frontend/src/sm_invoice_details.js"],"names":["React","Component","Table","tracker","Row","Select","options","label","value","sm_invoice_details","constructor","handleChange","id","oldstatus","state","newstatus","console","log","response","delete","put","status","componentDidMount","e","props","match","params","setState","get","email","data","userid","user","address","date","createdAt","selectedOption","arr","selectedoption","basket","res","totalprice","productList","parray","j","productArray","length","name","price","size","q","quantity","prod","push","item","marginTop","map","numList","i","num","width","details","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Table from 'react-bootstrap/Table';\r\nimport tracker from '../src/api/tracker';\r\nimport { Row } from 'reactstrap';\r\nimport Select from 'react-select';\r\n\r\nconst options = [\r\n    { label: \"on the way\", value: \"on the way\" },\r\n    { label: \"ordered\", value: \"ordered\" },\r\n    { label: \"shipped\", value: \"shipped\" },\r\n\r\n];\r\nclass sm_invoice_details extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            id: \"\",\r\n            arr: [],\r\n            oldstatus: \"\",\r\n            details: false,\r\n            newstatus: \"\",\r\n            selectedoption:\"\"\r\n        }\r\n        this.newstatus = this.newstatus.bind(this);\r\n    }\r\n\r\n    newstatus(e) {\r\n        this.setState(\r\n            { selectedoption },\r\n            () => console.log(`Option selected:`, this.state.selectedoption)\r\n        );\r\n    }\r\n    handleChange = async (id) => {\r\n\r\n        const oldstatus = this.state.oldstatus;\r\n        const newstatus = this.state.newstatus;\r\n        console.log(\"newstatus: \", newstatus);\r\n        console.log(\"oldstatus: \", oldstatus);\r\n        if (oldstatus !== newstatus) {\r\n            if (newstatus === \"Cancelled\") {\r\n                const response = await tracker.delete(\"order/\" + id);\r\n                console.log(\"delete response:\", response);\r\n            }\r\n            else {\r\n                const response = await tracker.put(\"order/\" + id, {\r\n                    status: newstatus,\r\n                });\r\n                console.log(\"status update response:\", response);\r\n            }\r\n\r\n        }\r\n        else {\r\n\r\n        }\r\n    \r\n\r\n    }\r\n    \r\n    componentDidMount = async (e) => {\r\n\r\n        var id = this.props.match.params.id;\r\n        this.setState({ id: id });\r\n        const response = await tracker.get('/order/' + id);\r\n        console.log(\"responsee\", response)\r\n        const email = response.data.email;\r\n        const status = response.data.status;\r\n        await this.setState({ oldstatus: status, newstatus:status });\r\n        const userid = response.data.user;\r\n        const address = response.data.address;\r\n        const date = response.data.createdAt;\r\n        this.setState({ selectedOption: { label: status, value: status } })\r\n        var arr = [];\r\n\r\n\r\n        const { selectedoption } = this.state;\r\n        if (response) {\r\n            console.log(\"responsee\", response)\r\n\r\n            console.log(response.data)\r\n            console.log(response.data.basket)\r\n            const res = await tracker.get('/basket/' + response.data.basket);\r\n            console.log(res);\r\n            const totalprice = res.data.productList.totalprice;\r\n            var parray = [];\r\n\r\n            for (var j = 0; j < res.data.productList.productArray.length; j++) {\r\n                const name = res.data.productList.productArray[j].name;\r\n                const price = res.data.productList.productArray[j].price;\r\n                const size = res.data.productList.productArray[j].size;\r\n                const q = res.data.productList.productArray[j].quantity;\r\n                const prod = [name, price, size, q]\r\n                console.log(\"q\", q)\r\n                parray.push(prod);\r\n                console.log(\"prod\", prod)\r\n\r\n            };\r\n\r\n\r\n            var item = (\r\n                <div style={{ marginTop: \"20px\" }}>\r\n\r\n                    <Row>\r\n                        <Table striped responsive bordered hover variant=\"dark\">\r\n                            \r\n                            <thead>\r\n                                <tr><p>Invoice ID #{this.state.id}</p></tr>\r\n                                <tr><p>User: {userid}</p></tr>\r\n                                <tr><p>Date: {date} </p></tr>\r\n                                <tr><p>Total Price: ${totalprice} </p></tr>\r\n                                <tr><p>Email: {email} </p></tr>\r\n                                <tr><p>Address: {address} </p></tr>\r\n                                <tr>Status: <div className='Selectopt'>\r\n                                    {/*       <select value={this.state.newstatus} onChange={this.newstatus} className='Selectopt'>\r\n                                        <option disabled value=\"Default\">Update Status</option>\r\n                                        <option value=\"Cancelled\">Cancelled</option>\r\n                                        <option value=\"ordered\">Ordered</option>\r\n                                        <option value=\"on the way\">On the way</option>\r\n                                        <option value=\"shipped\">Shipped</option>\r\n                                    </select>\r\n                                    */}\r\n\r\n                                    <Select\r\n                                        defaultInputValue={this.state.newstatus}\r\n                                        value={selectedoption}\r\n                                        onChange={this.newstatus}\r\n                                        options={options}\r\n                                    />\r\n                                </div></tr>\r\n                                <tr>\r\n                                    <th>name</th>\r\n                                    <th>price</th>\r\n                                    <th>size</th>\r\n                                    <th>quantity</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n\r\n                                {\r\n                                    parray.map((numList, i) => (\r\n                                        <tr key={i}>\r\n                                            {\r\n                                                numList.map((num, j) =>\r\n                                                    <td key={j}>{num}</td>\r\n                                                )\r\n                                            }\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                           \r\n                            </tbody>\r\n                \r\n                        </Table>\r\n                    </Row>\r\n                    <button style={{ width: \"auto\" }} className=\"b-login\" onClick={() => {this.handleChange(id)}}>Save</button>\r\n                </div>\r\n                \r\n                );\r\n              \r\n            arr.push(item);\r\n            await this.setState({ arr: arr });\r\n            await this.setState({details: true})\r\n         \r\n\r\n\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.details ? this.state.arr : null}\r\n                </>\r\n            \r\n            );\r\n    }\r\n}\r\nexport default sm_invoice_details;"]},"metadata":{},"sourceType":"module"}