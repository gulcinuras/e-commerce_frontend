{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Program Files\\\\Git\\\\ecommerce\\\\e-commerce-frontend\\\\src\\\\sales_manager.js\";\nimport tracker from '../src/api/tracker';\nimport React, { Component } from 'react';\nimport CanvasJSReact from './canvasjs.react';\nimport Moment from 'moment';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass sales_manager extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = async () => {\n      try {\n        const response = await tracker.get(\"product/all\");\n        const arrayproduct = response.data;\n        await this.setState({\n          product: arrayproduct\n        });\n        console.log(\"state\", this.state.product);\n        var products = [];\n\n        if (this.state.product.length !== 0) {\n          var productitem;\n\n          for (var i = 0; i < this.state.product.length; i++) {\n            console.log(this.state.product[i]);\n            const quantity = this.state.product[i].countInStock;\n            const name = this.state.product[i].name;\n            productitem = {\n              label: name,\n              y: quantity\n            };\n            products.push(productitem);\n          }\n\n          await this.setState({\n            quantity_product: products\n          });\n          const order_response = await tracker.get(\"order/all\");\n          const orderarray = order_response.data;\n          await this.setState({\n            orders: orderarray\n          });\n\n          if (this.state.orders.length !== 0) {\n            var invoices = [];\n            console.log(this.state.orders);\n            var item;\n\n            for (var j = 0; j < this.state.orders.length; j++) {\n              var date = this.state.orders[j].createdAt;\n              const basketid = this.state.orders[j].basket;\n              const res = await tracker.get('/basket/' + basketid);\n              console.log(res);\n              const totalprice = res.data.productList.totalprice;\n              console.log(typeof totalprice);\n              date = date.substring(0, 10);\n              date = Moment(date).format('YYYY-MM-DD');\n              console.log(typeof date);\n              item = {\n                x: date,\n                y: totalprice\n              };\n              console.log(date);\n              console.log(item.x);\n              console.log(item.y);\n              var exists = false;\n\n              if (invoices.length > 0) {\n                for (var i = 0; i < invoices.length && !exists; i++) {\n                  if (invoices[i].x === item.x) {\n                    invoices[i].y = invoices[i].y + item.y;\n                    exists = true;\n                  }\n                }\n\n                if (!exists) {\n                  invoices.push(item);\n                }\n              } else {\n                invoices.push(item);\n              }\n            }\n\n            debugger;\n            console.log(\"invoices: \", invoices);\n            await this.setState({\n              dataPoints: invoices\n            });\n            console.log(\"dataPoints: \", this.state.dataPoints);\n          }\n        }\n      } catch (e) {}\n    };\n\n    this.state = {\n      product: [],\n      quantity_product: [],\n      orders: [],\n      dataPoints: []\n    };\n  }\n\n  /*  handleQuantityData = () => {\r\n        console.log(\"handleQuantityData\");\r\n        var product = [];\r\n        if (this.state.product.length !== 0) {\r\n            var productitem;\r\n              for (var i = 0; i < this.state.product.length; i++) {\r\n                console.log(this.state.product[i]);\r\n                const quantity = this.state.product[i].countInStock;\r\n                const name = this.state.product[i].name;\r\n                productitem = { label: name, y: quantity };\r\n                product.push(productitem);\r\n              }\r\n            console.log(product);\r\n            return product;\r\n        }\r\n    }; */\n  render() {\n    const option_column = {\n      animationEnabled: true,\n      exportEnabled: true,\n      theme: \"light2\",\n      // \"light1\", \"dark1\", \"dark2\"\n      title: {\n        text: \"Products and Their Quantities\"\n      },\n      data: [{\n        // Change type to \"doughnut\", \"line\", \"splineArea\", etc.\n        type: \"column\",\n        dataPoints: this.state.quantity_product\n      }]\n    };\n    const option_line = {\n      animationEnabled: true,\n      exportEnabled: true,\n      theme: \"light2\",\n      // \"light1\", \"dark1\", \"dark2\"\n      title: {\n        text: \"Sales Day by Day\"\n      },\n      axisY: {\n        title: \"Sales\",\n        suffix: \"$\"\n      },\n      axisX: {\n        title: \"Dates\",\n        valueFormatString: \"YYYY-MM-DD\",\n        labelAngle: -50,\n        prefix: \"D\"\n      },\n      data: [{\n        type: \"line\",\n        toolTipContent: \"Day {x}: {y}$\",\n        dataPoints: this.state.dataPoints\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CanvasJSChart, {\n          options: option_line\n          /* onRef={ref => this.chart = ref} */\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default sales_manager;","map":{"version":3,"sources":["C:/Program Files/Git/ecommerce/e-commerce-frontend/src/sales_manager.js"],"names":["tracker","React","Component","CanvasJSReact","Moment","CanvasJS","CanvasJSChart","sales_manager","constructor","componentDidMount","response","get","arrayproduct","data","setState","product","console","log","state","products","length","productitem","i","quantity","countInStock","name","label","y","push","quantity_product","order_response","orderarray","orders","invoices","item","j","date","createdAt","basketid","basket","res","totalprice","productList","substring","format","x","exists","dataPoints","e","render","option_column","animationEnabled","exportEnabled","theme","title","text","type","option_line","axisY","suffix","axisX","valueFormatString","labelAngle","prefix","toolTipContent"],"mappings":"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","sourcesContent":["\r\nimport tracker from '../src/api/tracker';\r\nimport React, { Component } from 'react';\r\nimport CanvasJSReact from './canvasjs.react';\r\nimport Moment from 'moment';\r\nvar CanvasJS = CanvasJSReact.CanvasJS;\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\nclass sales_manager extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            product: [],\r\n            quantity_product: [],\r\n            orders: [],\r\n            dataPoints:[]\r\n        }\r\n    }\r\n    componentDidMount = async () => {\r\n        try {\r\n            const response = await tracker.get(\"product/all\");\r\n            const arrayproduct = response.data;\r\n            await this.setState({ product: arrayproduct });\r\n            console.log(\"state\", this.state.product);\r\n\r\n            var products = [];\r\n            if (this.state.product.length !== 0) {\r\n                var productitem;\r\n\r\n                for (var i = 0; i < this.state.product.length; i++) {\r\n                    console.log(this.state.product[i]);\r\n                    const quantity = this.state.product[i].countInStock;\r\n                    const name = this.state.product[i].name;\r\n                    productitem = { label: name, y: quantity };\r\n                    products.push(productitem);\r\n\r\n                }\r\n                await this.setState({ quantity_product: products });\r\n               \r\n                const order_response = await tracker.get(\"order/all\");\r\n                const orderarray = order_response.data;\r\n                await this.setState({ orders: orderarray });\r\n                if (this.state.orders.length !== 0) {\r\n                    var invoices = [];\r\n\r\n                    console.log(this.state.orders);\r\n                    var item;\r\n                    for (var j = 0; j < this.state.orders.length; j++) {\r\n                        var date = this.state.orders[j].createdAt;\r\n                        const basketid = this.state.orders[j].basket;\r\n                        const res = await tracker.get('/basket/' + basketid);\r\n\r\n                        console.log(res);\r\n                        const totalprice = res.data.productList.totalprice;\r\n                    \r\n\r\n                        console.log(typeof totalprice);\r\n                        date = date.substring(0, 10);\r\n                        date = Moment(date).format('YYYY-MM-DD');\r\n\r\n                        console.log(typeof date);\r\n                        item = { x: date, y: totalprice };\r\n                        console.log(date);\r\n                        console.log(item.x);\r\n                        console.log(item.y);\r\n                        var exists = false;\r\n                        if (invoices.length > 0)\r\n                        {\r\n                            for (var i = 0; i < invoices.length && !exists; i++) {\r\n                                if (invoices[i].x === item.x) {\r\n                                    invoices[i].y = invoices[i].y + item.y;\r\n                                    exists = true;\r\n                                    \r\n                                }\r\n                            }\r\n                            if (!exists) {\r\n                                invoices.push(item);\r\n                            }\r\n                        }\r\n                        else\r\n                        {\r\n                            invoices.push(item);\r\n                        }\r\n                    }\r\n                    debugger;\r\n                    console.log(\"invoices: \", invoices);\r\n                    await this.setState({ dataPoints: invoices });\r\n                    console.log(\"dataPoints: \",this.state.dataPoints)\r\n                }\r\n            }\r\n        } catch (e) { }\r\n\r\n    }\r\n  /*  handleQuantityData = () => {\r\n        console.log(\"handleQuantityData\");\r\n        var product = [];\r\n        if (this.state.product.length !== 0) {\r\n            var productitem;\r\n\r\n            for (var i = 0; i < this.state.product.length; i++) {\r\n                console.log(this.state.product[i]);\r\n                const quantity = this.state.product[i].countInStock;\r\n                const name = this.state.product[i].name;\r\n                productitem = { label: name, y: quantity };\r\n                product.push(productitem);\r\n\r\n            }\r\n            console.log(product);\r\n            return product;\r\n        }\r\n    }; */\r\n    render() {\r\n        const option_column = {\r\n            animationEnabled: true,\r\n            exportEnabled: true,\r\n            theme: \"light2\", // \"light1\", \"dark1\", \"dark2\"\r\n            title: {\r\n                text: \"Products and Their Quantities\"\r\n            },\r\n            data: [\r\n                {\r\n                    // Change type to \"doughnut\", \"line\", \"splineArea\", etc.\r\n                    type: \"column\",\r\n                    dataPoints: this.state.quantity_product\r\n                }\r\n            ]\r\n        }\r\n\r\n\r\n        const option_line = {\r\n            animationEnabled: true,\r\n            exportEnabled: true,\r\n            theme: \"light2\", // \"light1\", \"dark1\", \"dark2\"\r\n            title: {\r\n                text: \"Sales Day by Day\"\r\n            },\r\n            axisY: {\r\n                title: \"Sales\",\r\n                suffix: \"$\"\r\n            },\r\n            axisX: {\r\n                title: \"Dates\",\r\n                valueFormatString: \"YYYY-MM-DD\",\r\n                labelAngle: -50,\r\n                prefix: \"D\",\r\n            },\r\n            data: [{\r\n                type: \"line\",\r\n                toolTipContent: \"Day {x}: {y}$\",\r\n                dataPoints: this.state.dataPoints,\r\n            }]\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <>\r\n            <div>\r\n                <CanvasJSChart options={option_line}\r\n                /* onRef={ref => this.chart = ref} */\r\n                />\r\n                {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n            </div>\r\n<br/>\r\n\r\n\r\n\r\n          \r\n            </>\r\n\r\n\t\t);\r\n    }\r\n}\r\nexport default sales_manager;"]},"metadata":{},"sourceType":"module"}