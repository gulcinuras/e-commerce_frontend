{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Program Files\\\\Git\\\\ecommerce\\\\e-commerce-frontend\\\\src\\\\sm_campaigns.js\";\nimport './App.css';\nimport tracker from '../src/api/tracker';\nimport Indeterminate from './Checkbox';\nimport Table from 'react-bootstrap/Table';\nimport { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\nimport 'react-pro-sidebar/dist/css/styles.css';\nimport { FaCheckCircle } from \"react-icons/fa\";\nimport { SidebarContent } from 'react-pro-sidebar';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport React, { Component, useEffect } from 'react';\nimport Logo from './mylogo.png';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Input } from '@material-ui/core';\n\nclass sm_campaigns extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = async () => {\n      try {\n        debugger;\n        const response = await tracker.get(\"product/all\");\n        const arrayproduct = response.data;\n        this.setState({\n          products: arrayproduct\n        });\n        console.log(\"state\", this.state.products);\n        var prod = [];\n        var arr = [];\n\n        if (this.state.products.length !== 0) {\n          console.log(this.state.products);\n          var item;\n          var parray = [];\n          var pricelist = [];\n\n          for (var i = 0; i < this.state.products.length; i++) {\n            const newprice = this.state.products[i].newprice;\n            pricelist.push(newprice);\n          }\n\n          await this.setState({\n            updated_prices: pricelist\n          });\n\n          for (var i = 0; i < this.state.products.length; i++) {\n            console.log(this.state.products[i]);\n            const id = this.state.products[i]._id;\n            const brand = this.state.products[i].brand;\n            const category = this.state.products[i].category;\n            const countInStock = this.state.products[i].countInStock;\n            const size = this.state.products[i].size;\n            const gender = this.state.products[i].gender;\n            const newprice = this.state.products[i].newprice;\n            const price = this.state.products[i].price;\n            const name = this.state.products[i].name;\n            const description = this.state.products[i].description;\n            var context = this;\n            const index = i;\n\n            var update = /*#__PURE__*/_jsxDEV(Input, {\n              type: \"tel\",\n              onChange: context.handleItemChanged.bind(context, index),\n              placeholder: newprice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 35\n            }, this);\n\n            const save = /*#__PURE__*/_jsxDEV(FaCheckCircle, {\n              style: {\n                size: \"1rem\",\n                cursor: \"pointer\",\n                transition: \"all 0.3s ease 0s\"\n              },\n              onClick: () => {\n                this.handleUpdate(id, name, size, category, brand, description, gender, newprice, index);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 35\n            }, this);\n\n            const prod = [name, id, brand, category, gender, countInStock, size, price, newprice, update, save];\n            console.log(id);\n            console.log(prod);\n            parray.push(prod);\n          }\n\n          ;\n\n          var item = /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              striped: true,\n              responsive: true,\n              bordered: true,\n              hover: true,\n              variant: \"dark\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Brand\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Gender\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Count in Stock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Size\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"New Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Update Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: parray.map((numList, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: numList.map((num, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: num\n                  }, j, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 57\n                  }, this))\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this);\n\n          arr.push(item);\n          await this.setState({\n            arr: arr\n          });\n          await this.setState({\n            change: true\n          });\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.handleUpdate = async (id, name, size, category, brand, description, gender, newprice, i) => {\n      debugger;\n\n      try {\n        console.log(\"handleUpdate\");\n        console.log(\"updated:\", this.state.updated_prices[i]);\n\n        if (this.state.updated_prices[i] !== newprice) {\n          const response = await tracker.put(\"product/\" + id, {\n            name: name,\n            size: size,\n            category: category,\n            brand: brand,\n            description: description,\n            gender: gender,\n            newprice: this.state.updated_prices[i]\n          });\n          console.log(response);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.state = {\n      products: [],\n      updated_prices: [],\n      price: 0,\n      arr: [],\n      change: false\n    };\n  }\n\n  handleItemChanged(i, event) {\n    debugger;\n    var updated_prices = this.state.updated_prices;\n    updated_prices[i] = event.target.value;\n    this.setState({\n      updated_prices: updated_prices\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.state.change ? this.state.arr : null\n    }, void 0, false);\n  }\n\n}\n\nexport default sm_campaigns;","map":{"version":3,"sources":["C:/Program Files/Git/ecommerce/e-commerce-frontend/src/sm_campaigns.js"],"names":["tracker","Indeterminate","Table","ProSidebar","Menu","MenuItem","SubMenu","FaCheckCircle","SidebarContent","Link","Navbar","Nav","NavDropdown","React","Component","useEffect","Logo","Input","sm_campaigns","constructor","componentDidMount","response","get","arrayproduct","data","setState","products","console","log","state","prod","arr","length","item","parray","pricelist","i","newprice","push","updated_prices","id","_id","brand","category","countInStock","size","gender","price","name","description","context","index","update","handleItemChanged","bind","save","cursor","transition","handleUpdate","marginTop","map","numList","num","j","change","e","put","event","target","value","render"],"mappings":"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","sourcesContent":["\r\nimport './App.css';\r\nimport tracker from '../src/api/tracker';\r\nimport Indeterminate from './Checkbox';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport { FaCheckCircle } from \"react-icons/fa\";\r\nimport { SidebarContent } from 'react-pro-sidebar';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport React, { Component, useEffect } from 'react';\r\nimport Logo from './mylogo.png';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Input } from '@material-ui/core';\r\nclass sm_campaigns extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            products: [],\r\n            updated_prices: [],\r\n            price: 0,\r\n            arr: [],\r\n            change:false\r\n        }\r\n    }\r\n    handleItemChanged(i, event) {\r\n        debugger;\r\n        var updated_prices = this.state.updated_prices;\r\n        updated_prices[i] = event.target.value;\r\n\r\n        this.setState({\r\n            updated_prices: updated_prices\r\n        });\r\n    }\r\n    componentDidMount = async () => {\r\n        try {\r\n            debugger;\r\n            const response = await tracker.get(\"product/all\");\r\n            const arrayproduct = response.data;\r\n            this.setState({ products: arrayproduct });\r\n            console.log(\"state\", this.state.products);\r\n\r\n            var prod = [];\r\n            var arr = [];\r\n            if (this.state.products.length !== 0) {\r\n                console.log(this.state.products);\r\n                var item;\r\n                var parray = [];\r\n                var pricelist = [];\r\n                for (var i = 0; i < this.state.products.length; i++) {\r\n                    const newprice = this.state.products[i].newprice;\r\n                    pricelist.push(newprice);\r\n                }\r\n                await this.setState({ updated_prices: pricelist });\r\n\r\n                for (var i = 0; i < this.state.products.length; i++) {\r\n                    console.log(this.state.products[i]);\r\n                    const id = this.state.products[i]._id;\r\n                    const brand = this.state.products[i].brand;\r\n                    const category = this.state.products[i].category;\r\n                    const countInStock = this.state.products[i].countInStock;\r\n                    const size = this.state.products[i].size;\r\n                    const gender = this.state.products[i].gender;\r\n                    const newprice = this.state.products[i].newprice;\r\n                    const price = this.state.products[i].price;\r\n                    const name = this.state.products[i].name;\r\n                    const description = this.state.products[i].description;\r\n                    var context = this; \r\n                    const index = i;\r\n\r\n                    var update = (< Input type=\"tel\" onChange={context.handleItemChanged.bind(context, index)} placeholder={newprice} />)\r\n                    const save = (<FaCheckCircle style={{size:\"1rem\", cursor: \"pointer\", transition: \"all 0.3s ease 0s\" }} onClick={() => { this.handleUpdate(id, name, size, category, brand, description, gender, newprice, index) }} />)\r\n                    const prod = [name, id, brand, category,gender, countInStock, size, price, newprice, update, save]\r\n                    console.log(id);\r\n                    console.log(prod);\r\n                    parray.push(prod);\r\n                };\r\n\r\n                var item = (\r\n                    <div style={{ marginTop: \"20px\" }}>\r\n\r\n                       \r\n                            <Table striped responsive bordered hover variant=\"dark\">\r\n\r\n                                <thead>\r\n                                    <td>Name</td>\r\n                                    <td>Id</td>\r\n                                    <td>Brand</td>\r\n                                    <td>Category</td>\r\n                                    <td>Gender</td>\r\n                                    <td>Count in Stock</td>\r\n                                    <td>Size</td>\r\n                                    <td>Price</td>\r\n                                    <td>New Price</td>\r\n                                    <td>Update Price</td>\r\n                                    <td>Save</td>\r\n                                </thead>\r\n                                <tbody>\r\n\r\n                                    {\r\n                                        parray.map((numList, i) => (\r\n                                            <tr key={i}>\r\n                                                {\r\n                                                    numList.map((num, j) =>\r\n                                                        <td key={j}>{num}</td>\r\n\r\n                                                    )\r\n                                                }\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n\r\n                                </tbody>\r\n\r\n                            </Table>\r\n               \r\n                    </div>\r\n\r\n                );\r\n\r\n                arr.push(item);\r\n                await this.setState({ arr: arr });\r\n                await this.setState({ change: true })\r\n\r\n\r\n            }\r\n\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleUpdate = async (id, name, size, category, brand, description, gender, newprice, i) => {\r\n        debugger;\r\n        try {\r\n            console.log(\"handleUpdate\");\r\n            console.log(\"updated:\", this.state.updated_prices[i])\r\n            if (this.state.updated_prices[i] !== newprice) {\r\n                const response = await tracker.put(\"product/\" + id, {\r\n                    name: name,\r\n                    size: size,\r\n                    category: category,\r\n                    brand: brand,\r\n                    description: description,\r\n                    gender: gender,\r\n                    newprice: this.state.updated_prices[i],\r\n\r\n\r\n                })\r\n\r\n                console.log(response);\r\n\r\n            }\r\n          \r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n  \r\n\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                {this.state.change ? this.state.arr : null}\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\nexport default sm_campaigns;"]},"metadata":{},"sourceType":"module"}